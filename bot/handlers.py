from aiogram import F, Router, types
from aiogram.filters import Command
from aiogram.types import Message

import kb
import text

router = Router()

@router.message(Command("start"))
async def start_handler(msg: Message):
    '''
    Message '/start' -> main menu 
    '''
    await msg.answer(text.greet.format(name=msg.from_user.full_name), reply_markup=kb.main_menu)

@router.message(F.text == "–ú–µ–Ω—é")
@router.message(F.text == "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
@router.message(F.text == "‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
async def main_menu(msg: Message):
    await msg.answer(text.main_menu, reply_markup=kb.main_menu)



@router.callback_query(F.data == 'upload_audio')
async def audio_menu(callback: types.CallbackQuery):
    '''
    After pushing 'üé∂ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É' button raises audio menu
    '''
    await callback.message.answer(text.audio_menu, reply_markup=kb.audio_menu)
    await callback.answer()

@router.callback_query(F.data == "help")
async def help_button(callback: types.CallbackQuery):
    await callback.message.answer("–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–ª–æ–∂–∏—Ç—å –ø–µ—Å–Ω—é –Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –∏–ª–∏ –≤—ã–¥–µ–ª–∏—Ç—å –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç")
    await callback.answer()

@router.callback_query(F.data == 'support')
async def support_button(callback: types.CallbackQuery):
    await callback.message.answer(" –ß—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å–≤—è–∂–∏—Å—å —Å –æ–¥–Ω–∏–º –∏–∑ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π:\
                                   \n @sasha_doroshkevich \n @roman_dvoryankov \n @polozhiev \
                                   \n @noonmare \n @ivansbrodov") 
    await callback.answer()

@router.callback_query(F.data ==  "return_1")
async def audio_to_main(callback: types.CallbackQuery):
    await callback.message.answer(text.main_menu, reply_markup=kb.main_menu)
    await callback.answer()

@router.callback_query(F.data ==  "selection")
async def audio_to_select(callback: types.CallbackQuery):
    await callback.message.answer(text=text.select_menu)
    await callback.answer()


# @router.callback_query(F.data ==  "return_2")
# async def select_to_audio(callback: types.CallbackQuery):
#     await callback.message.answer(text.audio_menu, reply_markup=kb.audio_menu)
#     await callback.answer()


@router.callback_query(F.data == "decomposition")
async def audio_decomp(callback: types.CallbackQuery):
    await callback.message.answer("–ú–æ–∂–µ—à—å –ø—Ä–∏—Å–ª–∞—Ç—å –≤ —á–∞—Ç –ø–µ—Å–Ω—é, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–µ–ª –±—ã —Ä–∞–∑–ª–æ–∂–∏—Ç—å")
    await callback.answer()
